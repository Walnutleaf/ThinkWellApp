{"version":3,"file":"static/js/main.a6b6a829.js","mappings":"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","sources":["screens/Home.js","screens/MyQuotesAffirmation.js","screens/favorites.js","screens/NotificationSettings.js","screens/AccountScreen.js","navigation.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { StyleSheet, Platform, Text, View, TouchableOpacity, Share, Animated, ScrollView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'; // Use this for heart icon\r\nimport Modal from 'react-native-modal';\r\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { BlurView } from 'expo-blur';\r\nimport * as Notifications from 'expo-notifications';\r\nimport { FaHeart, FaRegHeart, FaShareSquare, FaTh, FaStar, FaQuoteRight, FaBookOpen, FaSmile } from 'react-icons/fa';\r\n\r\n\r\nconst Icon = ({ name, size, color }) => {\r\n  if (Platform.OS === 'web') {\r\n    switch (name) {\r\n      case 'heart':\r\n        return <FaHeart size={size} color={color} />;\r\n      case 'heart-outline':\r\n        return <FaRegHeart size={size} color={color} />;\r\n      case 'share-outline':\r\n        return <FaShareSquare size={size} color={color} />;\r\n      case 'grid':\r\n        return <FaTh size={size} color={color} />;\r\n      case 'star-outline':\r\n        return <FaStar size={size} color={color} />;\r\n      case 'format-quote-close':\r\n        return <FaQuoteRight size={size} color={color} />;\r\n      case 'book-open':\r\n        return <FaBookOpen size={size} color={color} />;\r\n      case 'emoticon-outline':\r\n        return <FaSmile size={size} color={color} />;\r\n      default:\r\n        return null;\r\n    }\r\n  } else {\r\n    return <MaterialCommunityIcons name={name} size={size} color={color} />;\r\n  }\r\n};\r\n\r\n\r\nconst HARDCODED_CATEGORIES = {\r\n  \"Personal Growth\": [\"Love Yourself HC\", \"Letting Go\", \"Self Respect\", \"Positive Thinking\", \"Introvert\", \"Empathetic\"],\r\n  \"Inspirational\": [\"Women's Empowerment\", \"Passion\", \"Perseverance\", \"Success\", \"Failure\", \"Encouraging Words\"],\r\n  \"Productivity\": [\"Focus\", \"Discipline\", \"Time Management\", \"Efficiency\", \"Goal Setting\"],\r\n  \"Relationships\": [\"Love\", \"Friendship\", \"Loyalty\", \"Trust\", \"Parenthood\"],\r\n  \"Philosophical\": [\"Stoicism\", \"Existence\", \"Morality\", \"Knowledge\", \"Reflection\", \"Pre-Socratic\"],\r\n  \"Spiritual\": [\"Faith\", \"Inner Peace\", \"Meditation\", \"Bible Verses\", \"Buddhism\"],\r\n  \"Moods\": [\"Happiness\", \"Sadness\", \"Anger\", \"Fear\", \"Joy\", \"Anxiety\"],\r\n  \"Life Lessons\": [\"Life Lessons\", \"Experience\", \"Wisdom\"],\r\n  \"Career\": [\"Leadership\", \"Teamwork\", \"Innovation\", \"Career Growth\", \"Professionalism\"],\r\n  \"Health\": [\"Wellness\", \"Fitness\", \"Nutrition\", \"Mental Health\", \"Self-care\"],\r\n  \"Adventure\": [\"Exploration\", \"Adventure\", \"Travel\", \"Curiosity\", \"Discovery\"],\r\n  \"Other\": []\r\n};\r\n\r\nconst HomeScreen = () => {\r\n  const [filters, setFilters] = useState([]);\r\n  const [quote, setQuote] = useState('Select an author or category and press the button to get a quote');\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n  const [likedQuotes, setLikedQuotes] = useState([]);\r\n  const [quoteCounter, setQuoteCounter] = useState(0);\r\n  const [quoteDisplayTimeout, setQuoteDisplayTimeout] = useState(null);\r\n  const [githubQuotes, setGithubQuotes] = useState([]);\r\n  const [authorsList, setAuthorsList] = useState([]);\r\n  const [categoriesList, setCategoriesList] = useState([]);\r\n  const [currentQuoteData, setCurrentQuoteData] = useState(null);\r\n  const [isExplanationVisible, setIsExplanationVisible] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n  const route = useRoute();\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (route.params?.notificationQuote) {\r\n      setQuote(route.params.notificationQuote);\r\n      route.params.notificationQuote = undefined;\r\n    }\r\n  }, [route.params?.notificationQuote]);\r\n\r\n  useEffect(() => {\r\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n      // Handle received notification\r\n    });\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\r\n      const notificationQuote = response.notification.request.content.data.quote;\r\n      if (notificationQuote) {\r\n        setQuote(notificationQuote);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current);\r\n      Notifications.removeNotificationSubscription(responseListener.current);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n  const fetchGithubQuotes = async () => {\r\n    try {\r\n      const responseQuotes = await fetch('https://walnutleaf.github.io/ThinkWell/quotes.json', { cache: 'no-store' });\r\n      const responseCategories = await fetch('https://walnutleaf.github.io/ThinkWell/categories.json', { cache: 'no-store' });\r\n\r\n      if (!responseQuotes.ok || !responseCategories.ok) {\r\n        throw new Error('Failed to fetch quotes.json or categories.json');\r\n      }\r\n\r\n      const fetchedQuotes = await responseQuotes.json();\r\n      const fetchedCategories = await responseCategories.json();\r\n\r\n      const processedQuotes = fetchedQuotes.flatMap(author =>\r\n        author.quotes.map(quote => ({\r\n          ...quote,\r\n          author: author.author,\r\n          type: author.type\r\n        }))\r\n      );\r\n\r\n      const allCategories = new Set(processedQuotes.flatMap(quote => quote.category));\r\n\r\n      const structuredCategories = {};\r\n      fetchedCategories.forEach(section => {\r\n        structuredCategories[section.section] = section.categories.filter(cat => allCategories.has(cat));\r\n      });\r\n\r\n      const categorizedItems = new Set(Object.values(structuredCategories).flat());\r\n      const uncategorizedItems = Array.from(allCategories).filter(cat => !categorizedItems.has(cat));\r\n      if (uncategorizedItems.length > 0) {\r\n        if (!structuredCategories['Other']) {\r\n          structuredCategories['Other'] = [];\r\n        }\r\n        structuredCategories['Other'].push(...uncategorizedItems);\r\n      }\r\n\r\n      Object.keys(structuredCategories).forEach(key => {\r\n        if (structuredCategories[key].length === 0) {\r\n          delete structuredCategories[key];\r\n        }\r\n      });\r\n\r\n      setGithubQuotes(processedQuotes);\r\n      setAuthorsList(Array.from(new Set(fetchedQuotes.map(author => author.author))).map(author => ({ name: author, icon: 'book-open' })));\r\n      setCategoriesList(structuredCategories);\r\n\r\n      if (processedQuotes.length > 0) {\r\n        const randomQuote = processedQuotes[Math.floor(Math.random() * processedQuotes.length)];\r\n        setQuote(`${randomQuote.text} - ${randomQuote.author}`);\r\n        setCurrentQuoteData(randomQuote);\r\n      }\r\n\r\n      await AsyncStorage.setItem('cachedQuotes', JSON.stringify(processedQuotes));\r\n      await AsyncStorage.setItem('cachedCategories', JSON.stringify(structuredCategories));\r\n    } catch (error) {\r\n      console.error('Error fetching quotes or categories from GitHub:', error);\r\n\r\n      try {\r\n        const cachedQuotes = await AsyncStorage.getItem('cachedQuotes');\r\n        const cachedCategories = await AsyncStorage.getItem('cachedCategories');\r\n\r\n        if (cachedQuotes && cachedCategories) {\r\n          setGithubQuotes(JSON.parse(cachedQuotes));\r\n          setCategoriesList(JSON.parse(cachedCategories));\r\n        } else {\r\n          setGithubQuotes([]);\r\n          setCategoriesList(HARDCODED_CATEGORIES);\r\n          setQuote('Failed to load quotes. Please check your internet connection and try again.');\r\n        }\r\n      } catch (cacheError) {\r\n        console.error('Error loading cached data:', cacheError);\r\n        setGithubQuotes([]);\r\n        setCategoriesList(HARDCODED_CATEGORIES);\r\n        setQuote('Failed to load quotes. Please check your internet connection and try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGithubQuotes();\r\n  }, []);\r\n\r\n  const handleOpenFilters = () => {\r\n    setIsDropdownVisible(true);\r\n  };\r\n\r\n  const handleApplyFilters = (newFilters) => {\r\n    setFilters(newFilters);\r\n    getQuote();\r\n  };\r\n\r\n  const handleFilterSelect = (filter) => {\r\n    if (filters.includes(filter)) {\r\n      setFilters((prevState) => prevState.filter((prevFilter) => prevFilter !== filter));\r\n    } else {\r\n      setFilters((prevState) => [...prevState, filter]);\r\n    }\r\n  };\r\n\r\n  const getQuote = useCallback(() => {\r\n    if (!githubQuotes || githubQuotes.length === 0) {\r\n      setQuote('No quotes available. Please try again later.');\r\n      return;\r\n    }\r\n\r\n    if (filters.length === 0) {\r\n      const randomQuote = githubQuotes[Math.floor(Math.random() * githubQuotes.length)];\r\n      setQuote(`${randomQuote.text} - ${randomQuote.author}`);\r\n      setCurrentQuoteData(randomQuote);\r\n      return;\r\n    }\r\n\r\n    if (filters.includes('Favorites')) {\r\n      getFavoriteQuotes();\r\n      return;\r\n    }\r\n\r\n    if (filters.includes('My Quotes')) {\r\n      getMyQuotes();\r\n      return;\r\n    }\r\n\r\n    let filteredQuotes = githubQuotes.filter(quote =>\r\n      filters.some(filter =>\r\n        quote.category.includes(filter) || quote.author === filter\r\n      )\r\n    );\r\n\r\n    if (filteredQuotes.length > 0) {\r\n      const randomQuote = filteredQuotes[Math.floor(Math.random() * filteredQuotes.length)];\r\n      setQuote(`${randomQuote.text} - ${randomQuote.author}`);\r\n      setCurrentQuoteData(randomQuote);\r\n    } else {\r\n      setQuote('No quotes found');\r\n      setCurrentQuoteData(null);\r\n    }\r\n  }, [filters, githubQuotes]);\r\n\r\n  const handleQuoteClick = () => {\r\n    if (currentQuoteData && (currentQuoteData.explanation || currentQuoteData.reference)) {\r\n      setIsExplanationVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleSwipeUp = () => {\r\n    getQuote();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (quoteDisplayTimeout) {\r\n      clearTimeout(quoteDisplayTimeout);\r\n    }\r\n    const timeout = setTimeout(() => {\r\n      setQuoteCounter((prevCounter) => {\r\n        const newCounter = prevCounter + 1;\r\n        AsyncStorage.setItem(\"quoteCounter\", JSON.stringify(newCounter));\r\n        return newCounter;\r\n      });\r\n    }, 1200);\r\n    setQuoteDisplayTimeout(timeout);\r\n    return () => clearTimeout(timeout);\r\n  }, [quote]);\r\n  \r\n\r\n  useEffect(() => {\r\n    const loadCounter = async () => {\r\n      try {\r\n        const savedCounter = await AsyncStorage.getItem(\"quoteCounter\");\r\n        if (savedCounter !== null) {\r\n          setQuoteCounter(JSON.parse(savedCounter));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading quote counter from AsyncStorage\", error);\r\n      }\r\n    };\r\n  \r\n    loadCounter();\r\n  }, []);\r\n\r\n  const handleLikeQuote = useCallback(async () => {\r\n    try {\r\n      const savedQuotes = await AsyncStorage.getItem(\"likedQuotes\");\r\n      let updatedLikedQuotes = savedQuotes ? JSON.parse(savedQuotes) : [];\r\n      if (!updatedLikedQuotes.includes(quote)) {\r\n        updatedLikedQuotes.push(quote);\r\n        await AsyncStorage.setItem(\"likedQuotes\", JSON.stringify(updatedLikedQuotes));\r\n        setLikedQuotes(updatedLikedQuotes);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [quote]);\r\n\r\n  const handleShareQuote = () => {\r\n    Share.share({\r\n      message: quote,\r\n    });\r\n  };\r\n\r\n  const translateY = useRef(new Animated.Value(0)).current;\r\n  const gestureState = useRef(new Animated.Value(GestureState.UNDETERMINED)).current;\r\n\r\n  const onGestureEvent = Animated.event([{ nativeEvent: { translationY: translateY } }], { useNativeDriver: true });\r\n\r\n  const onHandlerStateChange = ({ nativeEvent }) => {\r\n    if (nativeEvent.oldState === GestureState.ACTIVE) {\r\n      Animated.timing(translateY, {\r\n        toValue: nativeEvent.translationY < -50 ? -1000 : 0,\r\n        duration: 200,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        if (nativeEvent.translationY < -50) {\r\n          handleSwipeUp();\r\n          translateY.setValue(0);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const quoteStyle = {\r\n    transform: [{ translateY }],\r\n  };\r\n\r\n  const handleCloseModal = useCallback(() => {\r\n    setIsExplanationVisible(false);\r\n  }, []);\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#63b3ed', '#6a0dad', '#ed64a6']}\r\n      start={{ x: 0, y: 0 }}\r\n      end={{ x: 1, y: 1 }}\r\n      style={styles.container}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.appName}>ThinkWell</Text>\r\n        <Text style={styles.counterText}>{quoteCounter}</Text>\r\n\r\n        <Modal\r\n          isVisible={isDropdownVisible}\r\n          onBackdropPress={() => setIsDropdownVisible(false)}\r\n          onBackButtonPress={() => setIsDropdownVisible(false)}\r\n          style={styles.modal}\r\n          animationIn=\"slideInUp\"\r\n          animationOut=\"slideOutDown\"\r\n          animationInTiming={300}\r\n          animationOutTiming={300}\r\n          backdropOpacity={0}\r\n        >\r\n          <View style={styles.bottomSheetContent}>\r\n            {renderFiltersContent(\r\n              handleFilterSelect,\r\n              filters,\r\n              () => setIsDropdownVisible(false),\r\n              handleApplyFilters,\r\n              authorsList,\r\n              categoriesList\r\n            )}\r\n          </View>\r\n        </Modal>\r\n\r\n        <PanGestureHandler\r\n          onGestureEvent={onGestureEvent}\r\n          onHandlerStateChange={onHandlerStateChange}\r\n          minDist={10}\r\n          minPointers={1}\r\n          maxPointers={1}\r\n          minDeltaY={-100}\r\n          maxDeltaY={100}\r\n        >\r\n          <Animated.View style={[styles.quoteContainer, quoteStyle]}>\r\n            <TouchableOpacity onPress={handleQuoteClick}>\r\n              <Text style={styles.quoteText}>{quote}</Text>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n        </PanGestureHandler>\r\n\r\n        <View style={styles.actionButtonsContainer}>\r\n  <TouchableOpacity onPress={handleLikeQuote} style={styles.actionButton}>\r\n    {Platform.OS === 'web' ? (\r\n      likedQuotes.includes(quote) ? <FaHeart size={30} color=\"white\" /> : <FaRegHeart size={30} color=\"white\" />\r\n    ) : (\r\n      <MaterialCommunityIcons name={likedQuotes.includes(quote) ? 'heart' : 'heart-outline'} size={30} color=\"white\" />\r\n    )}\r\n  </TouchableOpacity>\r\n\r\n  <TouchableOpacity onPress={handleShareQuote} style={styles.actionButton}>\r\n  {Platform.OS === 'web' ? (\r\n    <FaShareSquare size={30} color=\"white\" />\r\n  ) : (\r\n    <MaterialCommunityIcons name=\"share-outline\" size={30} color=\"white\" />\r\n  )}\r\n</TouchableOpacity>\r\n\r\n\r\n  <TouchableOpacity style={styles.categoriesButton} onPress={handleOpenFilters}>\r\n    <BlurView intensity={50} style={styles.blurViewButton} tint=\"light\">\r\n      <View style={styles.buttonContent}>\r\n        {Platform.OS === 'web' ? (\r\n          <FaTh size={24} color=\"white\" />\r\n        ) : (\r\n          <MaterialCommunityIcons name=\"grid\" size={24} color=\"white\" />\r\n        )}\r\n        <Text style={styles.buttonText}>Categories</Text>\r\n      </View>\r\n    </BlurView>\r\n  </TouchableOpacity>\r\n</View>\r\n\r\n        <Modal\r\n          isVisible={isExplanationVisible}\r\n          onBackdropPress={handleCloseModal}\r\n          onBackButtonPress={handleCloseModal}\r\n          style={styles.modal}\r\n          animationIn=\"fadeIn\"\r\n          animationOut=\"fadeOutDown\"\r\n          animationInTiming={200}\r\n          animationOutTiming={200}\r\n          backdropOpacity={0.5}\r\n        >\r\n          <View style={styles.explanationContent}>\r\n            <ScrollView>\r\n              {currentQuoteData && currentQuoteData.explanation && (\r\n                <View style={styles.explanationSection}>\r\n                  <Text style={styles.explanationTitle}>Explanation:</Text>\r\n                  <Text style={styles.explanationText}>{currentQuoteData.explanation}</Text>\r\n                </View>\r\n              )}\r\n              {currentQuoteData && currentQuoteData.reference && (\r\n                <View style={styles.explanationSection}>\r\n                  <Text style={styles.explanationTitle}>Reference:</Text>\r\n                  <Text style={styles.explanationText}>{currentQuoteData.reference}</Text>\r\n                </View>\r\n              )}\r\n            </ScrollView>\r\n            <TouchableOpacity\r\n              style={styles.closeButton}\r\n              onPress={handleCloseModal}\r\n            >\r\n              <Text style={styles.closeButtonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst renderFiltersContent = (\r\n  handleFilterSelect,\r\n  filters,\r\n  onClose,\r\n  onApplyFilters,\r\n  authorsList,\r\n  categoriesList\r\n) => (\r\n  <ScrollView style={styles.bottomSheetContent}>\r\n    <View style={styles.doneButtonContainer}>\r\n      <TouchableOpacity\r\n        style={styles.doneButton}\r\n        onPress={() => {\r\n          onApplyFilters(filters);\r\n          onClose();\r\n        }}\r\n      >\r\n        <Text style={styles.doneButtonText}>Done</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n    <Text style={styles.sectionTitle}>Personal</Text>\r\n    <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.carousel}>\r\n      <View style={styles.carouselRow}>\r\n        {['Favorites', 'My Quotes'].map((filterType) => (\r\n          <TouchableOpacity\r\n            key={filterType}\r\n            style={[\r\n              styles.filterBox,\r\n              filters.includes(filterType) && styles.filterBoxActive,\r\n            ]}\r\n            onPress={() => handleFilterSelect(filterType)}\r\n          >\r\n            <Icon\r\n              name={filterType === 'Favorites' ? 'star-outline' : 'format-quote-close'}\r\n              size={24}\r\n              color={filters.includes(filterType) ? 'white' : 'black'}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.filterBoxText,\r\n                filters.includes(filterType) && styles.filterBoxActiveText,\r\n              ]}\r\n            >\r\n              {filterType}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n    <Text style={styles.sectionTitle}>Authors</Text>\r\n    <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.carousel}>\r\n      <View style={styles.carouselRow}>\r\n        {authorsList.map((filter) => (\r\n          <TouchableOpacity\r\n            key={filter.name}\r\n            style={[\r\n              styles.filterBox,\r\n              filters.includes(filter.name) && styles.filterBoxActive,\r\n            ]}\r\n            onPress={() => handleFilterSelect(filter.name)}\r\n          >\r\n            <Icon name=\"book-open\" size={24} color={filters.includes(filter.name) ? 'white' : 'black'} />\r\n            <Text\r\n              style={[\r\n                styles.filterBoxText,\r\n                filters.includes(filter.name) && styles.filterBoxActiveText,\r\n              ]}\r\n            >\r\n              {filter.name}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </ScrollView>\r\n    {Object.entries(categoriesList).map(([section, categories]) => (\r\n      <View key={section}>\r\n        <Text style={styles.sectionTitle}>{section}</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.carousel}>\r\n          <View style={styles.carouselRow}>\r\n            {categories.map((filter) => (\r\n              <TouchableOpacity\r\n                key={filter}\r\n                style={[\r\n                  styles.filterBox,\r\n                  filters.includes(filter) && styles.filterBoxActive,\r\n                ]}\r\n                onPress={() => handleFilterSelect(filter)}\r\n              >\r\n                <Icon name=\"emoticon-outline\" size={24} color={filters.includes(filter) ? 'white' : 'black'} />\r\n                <Text\r\n                  style={[\r\n                    styles.filterBoxText,\r\n                    filters.includes(filter) && styles.filterBoxActiveText,\r\n                  ]}\r\n                >\r\n                  {filter}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    ))}\r\n  </ScrollView>\r\n);\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  appName: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n    position: 'absolute',\r\n    top: 40,\r\n    width: '100%',\r\n  },\r\n  quoteContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 20,\r\n    marginTop: -140,\r\n  },\r\n  quoteText: {\r\n    fontSize: 25,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n  },\r\n  actionButtonsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    position: 'absolute',\r\n    bottom: 200,\r\n    left: 20,\r\n    right: 20,\r\n  },\r\n  actionButton: {\r\n    marginHorizontal: 10,\r\n  },\r\n  categoriesButton: {\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  },\r\n  blurViewButton: {\r\n    borderRadius: 20,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    marginLeft: 10,\r\n  },\r\n  modal: {\r\n    justifyContent: 'flex-end',\r\n    margin: 0,\r\n  },\r\n  doneButtonText: {\r\n    color: 'black',\r\n    textAlign: 'center',\r\n  },\r\n  doneButtonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    width: '100%',\r\n    marginBottom: 10,\r\n  },\r\n  doneButton: {\r\n    borderRadius: 5,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginTop: 10,\r\n    alignSelf: 'flex-start',\r\n    backgroundColor: 'white',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n    alignSelf: 'center',\r\n  },\r\n  bottomSheetContent: {\r\n    backgroundColor: 'white',\r\n    borderTopLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n    paddingHorizontal: 20,\r\n    paddingTop: 10,\r\n    paddingBottom: 20,\r\n    height: '75%',\r\n  },\r\n  filterBox: {\r\n    backgroundColor: 'lightgray',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 10,\r\n    margin: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  filterBoxActive: {\r\n    backgroundColor: 'black',\r\n  },\r\n  filterBoxText: {\r\n    marginTop: 5,\r\n    color: 'black',\r\n    textAlign: 'center',\r\n  },\r\n  filterBoxActiveText: {\r\n    color: 'white',\r\n  },\r\n  carousel: {\r\n    paddingHorizontal: 10,\r\n  },\r\n  carouselRow: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  counterText: {\r\n    position: 'absolute',\r\n    top: 63,\r\n    right: 35,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  explanationContent: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 20,\r\n    maxHeight: '80%',\r\n  },\r\n  explanationSection: {\r\n    marginBottom: 20,\r\n  },\r\n  explanationTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  explanationText: {\r\n    fontSize: 16,\r\n    lineHeight: 24,\r\n  },\r\n  closeButton: {\r\n    backgroundColor: '#6a0dad',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ScrollView,\r\n  Animated,\r\n  SafeAreaView,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\r\nimport { Swipeable } from 'react-native-gesture-handler';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst MyQuotesAffirmations = () => {\r\n  const [text, setText] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [quotes, setQuotes] = useState([]);\r\n  const swipeableRefs = useRef(new Map());\r\n  const buttonScale = useRef(new Animated.Value(1)).current;\r\n\r\n  useEffect(() => {\r\n    const fetchQuotes = async () => {\r\n      try {\r\n        const userQuotes = await AsyncStorage.getItem('userQuotes');\r\n        if (userQuotes !== null) {\r\n          setQuotes(JSON.parse(userQuotes));\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchQuotes();\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    if (text.trim() === '' || author.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newQuote = { quote: text, author };\r\n      const updatedQuotes = [...quotes, newQuote];\r\n      await AsyncStorage.setItem('userQuotes', JSON.stringify(updatedQuotes));\r\n      setQuotes(updatedQuotes);\r\n      setText('');\r\n      setAuthor('');\r\n      \r\n      // Button animation\r\n      Animated.sequence([\r\n        Animated.timing(buttonScale, { toValue: 0.95, duration: 100, useNativeDriver: true }),\r\n        Animated.timing(buttonScale, { toValue: 1, duration: 100, useNativeDriver: true }),\r\n      ]).start();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const deleteQuote = useCallback(async (quoteToDelete) => {\r\n    try {\r\n      const updatedQuotes = quotes.filter((q) => q !== quoteToDelete);\r\n      await AsyncStorage.setItem('userQuotes', JSON.stringify(updatedQuotes));\r\n      setQuotes(updatedQuotes);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [quotes]);\r\n\r\n  const renderRightActions = (progress, dragX, quote) => {\r\n    const trans = dragX.interpolate({\r\n      inputRange: [-100, 0],\r\n      outputRange: [1, 0],\r\n      extrapolate: 'clamp',\r\n    });\r\n    return (\r\n      <Animated.View \r\n        style={[\r\n          styles.deleteAction,\r\n          {\r\n            transform: [{ translateX: trans }],\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity \r\n          style={styles.deleteActionInner}\r\n          onPress={() => deleteQuote(quote)}\r\n        >\r\n          <MaterialCommunityIcons name=\"delete\" size={24} color=\"white\" />\r\n          <Text style={styles.deleteActionText}>Delete</Text>\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  const renderQuoteItem = (quote, index) => (\r\n    <Swipeable\r\n      key={index}\r\n      ref={(ref) => {\r\n        if (ref) {\r\n          swipeableRefs.current.set(index, ref);\r\n        } else {\r\n          swipeableRefs.current.delete(index);\r\n        }\r\n      }}\r\n      renderRightActions={(progress, dragX) => renderRightActions(progress, dragX, quote)}\r\n      overshootRight={false}\r\n      onSwipeableWillOpen={() => {\r\n        [...swipeableRefs.current.entries()].forEach(([key, ref]) => {\r\n          if (key !== index && ref) ref.close();\r\n        });\r\n      }}\r\n    >\r\n      <View style={styles.quoteCard}>\r\n        <Text style={styles.quoteText}>{quote.quote}</Text>\r\n        <Text style={styles.quoteAuthor}>- {quote.author}</Text>\r\n      </View>\r\n    </Swipeable>\r\n  );\r\n\r\n  const dismissKeyboard = () => {\r\n    Keyboard.dismiss();\r\n  };\r\n\r\n  return (\r\n    <GestureHandlerRootView style={{ flex: 1 }}>\r\n      <TouchableWithoutFeedback onPress={dismissKeyboard}>\r\n        <LinearGradient\r\n          colors={['#63b3ed', '#6a0dad', '#ed64a6']}\r\n          start={{ x: 0, y: 0 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={styles.container}\r\n        >\r\n          <SafeAreaView style={styles.safeArea}>\r\n            <View style={styles.content}>\r\n              <Text style={styles.title}>Add a Quote</Text>\r\n              <TextInput\r\n                style={styles.quoteInput}\r\n                onChangeText={setText}\r\n                value={text}\r\n                placeholder=\"Quote\"\r\n                multiline={true}\r\n              />\r\n              <TextInput\r\n                style={styles.authorInput}\r\n                onChangeText={setAuthor}\r\n                value={author}\r\n                placeholder=\"Author\"\r\n              />\r\n              <Animated.View style={{ transform: [{ scale: buttonScale }] }}>\r\n                <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n                  <Text style={styles.buttonText}>Submit</Text>\r\n                </TouchableOpacity>\r\n              </Animated.View>\r\n              <ScrollView style={styles.quotesContainer}>\r\n                {quotes.map((quote, index) => renderQuoteItem(quote, index))}\r\n              </ScrollView>\r\n            </View>\r\n          </SafeAreaView>\r\n        </LinearGradient>\r\n      </TouchableWithoutFeedback>\r\n    </GestureHandlerRootView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  safeArea: {\r\n    flex: 1,\r\n    paddingTop: 50,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    color: 'white',\r\n  },\r\n  quoteInput: {\r\n    borderWidth: 1,\r\n    borderColor: 'grey',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n    height: 150,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n  },\r\n  authorInput: {\r\n    borderWidth: 1,\r\n    borderColor: 'grey',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 18,\r\n    height: 45,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n  },\r\n  button: {\r\n    backgroundColor: '#6a0dad',\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n  },\r\n  quotesContainer: {\r\n    marginTop: 30,\r\n  },\r\n  quoteCard: {\r\n    backgroundColor: '#2a2a2a',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  quoteText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n    marginBottom: 10,\r\n  },\r\n  quoteAuthor: {\r\n    fontSize: 14,\r\n    color: 'white',\r\n    textAlign: 'right',\r\n  },\r\n  deleteAction: {\r\n    backgroundColor: 'red',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 75,\r\n    marginBottom: 10,\r\n  },\r\n  deleteActionInner: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  deleteActionText: {\r\n    color: 'white',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default MyQuotesAffirmations;","import React, { useState, useCallback, useRef } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Share, Animated } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { Swipeable } from 'react-native-gesture-handler';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst Favorites = () => {\r\n  const [likedQuotes, setLikedQuotes] = useState([]);\r\n  const swipeableRefs = useRef(new Map());\r\n\r\n  const getLikedQuotes = useCallback(async () => {\r\n    try {\r\n      const savedQuotes = await AsyncStorage.getItem(\"likedQuotes\");\r\n      if (savedQuotes !== null) {\r\n        setLikedQuotes(JSON.parse(savedQuotes));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      getLikedQuotes();\r\n    }, [getLikedQuotes])\r\n  );\r\n\r\n  const deleteQuote = useCallback(async (quoteToDelete) => {\r\n    try {\r\n      const updatedQuotes = likedQuotes.filter((q) => q !== quoteToDelete);\r\n      setLikedQuotes(updatedQuotes);\r\n      await AsyncStorage.setItem('likedQuotes', JSON.stringify(updatedQuotes));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [likedQuotes]);\r\n\r\n  const handleShareQuote = (quote) => {\r\n    Share.share({\r\n      message: quote,\r\n    });\r\n  };\r\n\r\n  const renderRightActions = (progress, dragX, quote) => {\r\n    const trans = dragX.interpolate({\r\n      inputRange: [-100, 0],\r\n      outputRange: [1, 0],\r\n      extrapolate: 'clamp',\r\n    });\r\n    return (\r\n      <Animated.View \r\n        style={[\r\n          styles.deleteAction,\r\n          {\r\n            transform: [{ translateX: trans }],\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity \r\n          style={styles.deleteActionInner}\r\n          onPress={() => deleteQuote(quote)}\r\n        >\r\n          <MaterialCommunityIcons name=\"delete\" size={24} color=\"white\" />\r\n          <Text style={styles.deleteActionText}>Delete</Text>\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  const renderQuoteItem = (quote, index) => (\r\n    <Swipeable\r\n      key={quote}\r\n      ref={(ref) => {\r\n        if (ref) {\r\n          swipeableRefs.current.set(quote, ref);\r\n        } else {\r\n          swipeableRefs.current.delete(quote);\r\n        }\r\n      }}\r\n      renderRightActions={(progress, dragX) => renderRightActions(progress, dragX, quote)}\r\n      overshootRight={false}\r\n      onSwipeableWillOpen={() => {\r\n        [...swipeableRefs.current.entries()].forEach(([key, ref]) => {\r\n          if (key !== quote && ref) ref.close();\r\n        });\r\n      }}\r\n    >\r\n      <View style={styles.quoteCard}>\r\n        <Text style={styles.quoteText}>{quote}</Text>\r\n        <TouchableOpacity style={styles.shareIcon} onPress={() => handleShareQuote(quote)}>\r\n          <MaterialCommunityIcons name=\"share-variant\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Swipeable>\r\n  );\r\n\r\n  const groupedQuotes = likedQuotes.reduce((grouped, quote) => {\r\n    const parts = quote.split('-');\r\n    const author = parts.length > 1 ? parts[1].trim() : 'Unknown';\r\n    if (!grouped[author]) {\r\n      grouped[author] = [];\r\n    }\r\n    grouped[author].push(quote);\r\n    return grouped;\r\n  }, {});\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#63b3ed', '#6a0dad', '#ed64a6']}\r\n      start={{ x: 0, y: 0 }}\r\n      end={{ x: 1, y: 1 }}\r\n      style={styles.container}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.scrollViewContent} showsVerticalScrollIndicator={false}>\r\n        {Object.keys(groupedQuotes).map((author) => (\r\n          <View key={author}>\r\n            <Text style={styles.sectionHeader}>{author}</Text>\r\n            {groupedQuotes[author].map((quote) => renderQuoteItem(quote))}\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  scrollViewContent: {\r\n    paddingBottom: 100,\r\n    paddingHorizontal: 10,\r\n    paddingTop: 20,\r\n  },\r\n  sectionHeader: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n    color: '#fff',\r\n  },\r\n  quoteCard: {\r\n    backgroundColor: '#2a2a2a',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  quoteText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n    marginBottom: 10,\r\n  },\r\n  shareIcon: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    bottom: 10,\r\n    zIndex: 1,\r\n  },\r\n  deleteAction: {\r\n    backgroundColor: 'red',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 75,\r\n    marginBottom: 10,\r\n  },\r\n  deleteActionInner: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  deleteActionText: {\r\n    color: 'white',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nexport default Favorites;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ScrollView,\r\n  Switch,\r\n  Modal,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as Notifications from 'expo-notifications';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst NotificationSettings = () => {\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\r\n  const [notificationsPerDay, setNotificationsPerDay] = useState(1);\r\n  const [startTime, setStartTime] = useState({ hours: 9, minutes: 0 });\r\n  const [endTime, setEndTime] = useState({ hours: 21, minutes: 0 });\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n  const [showTimePicker, setShowTimePicker] = useState(false);\r\n  const [currentTimeSelection, setCurrentTimeSelection] = useState(null);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const categories = [\r\n    'Personal', 'Plato', 'Friedrich Nietzsche', 'Marcus Aurelius', 'Carl Jung',\r\n    'Stress', 'Fears', 'Helpless', 'Exhausted', 'Sadness', 'Uncertainty', 'Frustration', 'Procrastination'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadSettings();\r\n    requestNotificationPermissions();\r\n    setupNotificationHandler();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveSettings();\r\n  }, [notificationsEnabled, notificationsPerDay, startTime, endTime, selectedCategories]);\r\n\r\n  const loadSettings = async () => {\r\n    try {\r\n      const settings = await AsyncStorage.getItem('notificationSettings');\r\n      if (settings) {\r\n        const parsedSettings = JSON.parse(settings);\r\n        setNotificationsEnabled(parsedSettings.enabled);\r\n        setNotificationsPerDay(parsedSettings.perDay || 1);\r\n        setStartTime(parsedSettings.startTime || { hours: 9, minutes: 0 });\r\n        setEndTime(parsedSettings.endTime || { hours: 21, minutes: 0 });\r\n        setSelectedCategories(parsedSettings.categories || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading settings:', error);\r\n    }\r\n  };\r\n\r\n  const saveSettings = async () => {\r\n    try {\r\n      const settings = {\r\n        enabled: notificationsEnabled,\r\n        perDay: notificationsPerDay,\r\n        startTime,\r\n        endTime,\r\n        categories: selectedCategories,\r\n      };\r\n      await AsyncStorage.setItem('notificationSettings', JSON.stringify(settings));\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n    }\r\n  };\r\n\r\n  const requestNotificationPermissions = async () => {\r\n    const { status } = await Notifications.requestPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Alert.alert('Permission denied', 'You need to grant notification permissions to enable this feature.');\r\n      setNotificationsEnabled(false);\r\n    }\r\n  };\r\n\r\n  const setupNotificationHandler = () => {\r\n    Notifications.setNotificationHandler({\r\n      handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: false,\r\n      }),\r\n    });\r\n  };\r\n\r\n  const scheduleNotifications = async () => {\r\n    await Notifications.cancelAllScheduledNotificationsAsync();\r\n  \r\n    if (!notificationsEnabled) {\r\n      Alert.alert('Info', 'Notifications are disabled.');\r\n      return;\r\n    }\r\n  \r\n    const savedQuotes = await AsyncStorage.getItem('likedQuotes');\r\n    let likedQuotes = savedQuotes ? JSON.parse(savedQuotes) : [];\r\n  \r\n    if (selectedCategories.length > 0) {\r\n      likedQuotes = likedQuotes.filter(quote => {\r\n        const [, author] = quote.split('-');\r\n        return selectedCategories.includes(author.trim());\r\n      });\r\n    }\r\n  \r\n    if (likedQuotes.length === 0) {\r\n      Alert.alert('Warning', 'No quotes available for the selected categories.');\r\n      return;\r\n    }\r\n  \r\n    const notificationTimes = calculateNotificationTimes(startTime, endTime, notificationsPerDay);\r\n    \r\n    for (let i = 0; i < notificationTimes.length; i++) {\r\n      const randomQuote = likedQuotes[Math.floor(Math.random() * likedQuotes.length)];\r\n      const [quoteText, author] = randomQuote.split('-');\r\n      \r\n      await Notifications.scheduleNotificationAsync({\r\n        content: {\r\n          title: 'Your Daily Quote',\r\n          body: quoteText.trim(),\r\n          data: { quote: randomQuote },\r\n        },\r\n        trigger: {\r\n          hour: notificationTimes[i].hours,\r\n          minute: notificationTimes[i].minutes,\r\n          repeats: true,\r\n        },\r\n      });\r\n    }\r\n  \r\n    saveSettings();\r\n    Alert.alert('Success', 'Notifications scheduled successfully!');\r\n  };\r\n\r\n  const calculateNotificationTimes = (start, end, count) => {\r\n    const startMinutes = start.hours * 60 + start.minutes;\r\n    const endMinutes = end.hours * 60 + end.minutes;\r\n    const interval = (endMinutes - startMinutes) / count;\r\n\r\n    return Array.from({ length: count }, (_, i) => {\r\n      const totalMinutes = startMinutes + interval * i;\r\n      const hours = Math.floor(totalMinutes / 60);\r\n      const minutes = Math.floor(totalMinutes % 60);\r\n      return { hours, minutes };\r\n    });\r\n  };\r\n\r\n  const toggleCategory = (category) => {\r\n    setSelectedCategories(prevCategories =>\r\n      prevCategories.includes(category)\r\n        ? prevCategories.filter(c => c !== category)\r\n        : [...prevCategories, category]\r\n    );\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    if (!time || typeof time.hours === 'undefined' || typeof time.minutes === 'undefined') {\r\n      return '00:00';\r\n    }\r\n    return `${time.hours.toString().padStart(2, '0')}:${time.minutes.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const openTimePicker = (type) => {\r\n    setCurrentTimeSelection(type);\r\n    setShowTimePicker(true);\r\n  };\r\n\r\n  const TimePicker = ({ time, onTimeChange, onConfirm }) => {\r\n    const [tempTime, setTempTime] = useState(time);\r\n    const hours = Array.from({ length: 24 }, (_, i) => i);\r\n    const minutes = [0, 15, 30, 45];\r\n  \r\n    return (\r\n      <View style={styles.timePickerContainer}>\r\n        <View style={styles.timePickerColumns}>\r\n          <ScrollView style={styles.timePickerColumn}>\r\n            {hours.map((hour) => (\r\n              <TouchableOpacity\r\n                key={`hour-${hour}`}\r\n                style={[\r\n                  styles.timePickerItem,\r\n                  hour === tempTime.hours && styles.timePickerItemSelected\r\n                ]}\r\n                onPress={() => setTempTime({ ...tempTime, hours: hour })}\r\n              >\r\n                <Text style={[\r\n                  styles.timePickerText,\r\n                  hour === tempTime.hours && styles.timePickerTextSelected\r\n                ]}>\r\n                  {hour.toString().padStart(2, '0')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </ScrollView>\r\n          <ScrollView style={styles.timePickerColumn}>\r\n            {minutes.map((minute) => (\r\n              <TouchableOpacity\r\n                key={`minute-${minute}`}\r\n                style={[\r\n                  styles.timePickerItem,\r\n                  minute === tempTime.minutes && styles.timePickerItemSelected\r\n                ]}\r\n                onPress={() => setTempTime({ ...tempTime, minutes: minute })}\r\n              >\r\n                <Text style={[\r\n                  styles.timePickerText,\r\n                  minute === tempTime.minutes && styles.timePickerTextSelected\r\n                ]}>\r\n                  {minute.toString().padStart(2, '0')}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </ScrollView>\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.confirmButton}\r\n          onPress={() => {\r\n            onTimeChange(tempTime);\r\n            onConfirm();\r\n          }}\r\n        >\r\n          <Text style={styles.confirmButtonText}>Confirm</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#63b3ed', '#6a0dad', '#ed64a6']} // Gradient background\r\n      start={{ x: 0, y: 0 }} // Start of the gradient (top-left corner)\r\n      end={{ x: 1, y: 1 }} // End of the gradient (bottom-right corner)\r\n      style={styles.container}\r\n    >\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>\r\n          <MaterialCommunityIcons name=\"arrow-left\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <ScrollView style={styles.scrollView}>\r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>Enable Notifications</Text>\r\n          <Switch\r\n            value={notificationsEnabled}\r\n            onValueChange={setNotificationsEnabled}\r\n            trackColor={{ false: '#767577', true: '#4c669f' }}\r\n            thumbColor={notificationsEnabled ? '#f4f3f4' : '#f4f3f4'}\r\n          />\r\n        </View>\r\n\r\n        {notificationsEnabled && (\r\n          <>\r\n            <View style={styles.section}>\r\n              <Text style={styles.sectionTitle}>Notifications per day</Text>\r\n              <View style={styles.notificationFrequencyContainer}>\r\n                {[1, 2, 3, 4, 5].map((num) => (\r\n                  <TouchableOpacity\r\n                    key={num}\r\n                    style={[\r\n                      styles.frequencyButton,\r\n                      notificationsPerDay === num && styles.frequencyButtonSelected\r\n                    ]}\r\n                    onPress={() => setNotificationsPerDay(num)}\r\n                  >\r\n                    <Text style={[\r\n                      styles.frequencyButtonText,\r\n                      notificationsPerDay === num && styles.frequencyButtonTextSelected\r\n                    ]}>\r\n                      {num}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n              <Text style={styles.sectionTitle}>Notification Time Range</Text>\r\n              <View style={styles.timeRangeContainer}>\r\n                <TouchableOpacity\r\n                  style={styles.timeButton}\r\n                  onPress={() => openTimePicker('start')}\r\n                >\r\n                  <Text style={styles.timeButtonText}>\r\n                    Start: {formatTime(startTime)}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={styles.timeButton}\r\n                  onPress={() => openTimePicker('end')}\r\n                >\r\n                  <Text style={styles.timeButtonText}>\r\n                    End: {formatTime(endTime)}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n              <Text style={styles.sectionTitle}>Notification Categories</Text>\r\n              <View style={styles.categoriesContainer}>\r\n                {categories.map((category) => (\r\n                  <TouchableOpacity\r\n                    key={category}\r\n                    style={[\r\n                      styles.categoryButton,\r\n                      selectedCategories.includes(category) && styles.categoryButtonSelected\r\n                    ]}\r\n                    onPress={() => toggleCategory(category)}\r\n                  >\r\n                    <Text style={[\r\n                      styles.categoryButtonText,\r\n                      selectedCategories.includes(category) && styles.categoryButtonTextSelected\r\n                    ]}>\r\n                      {category}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                ))}\r\n              </View>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              style={styles.scheduleButton}\r\n              onPress={scheduleNotifications}\r\n            >\r\n              <Text style={styles.scheduleButtonText}>Schedule Notifications</Text>\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n\r\n        <Modal\r\n          visible={showTimePicker}\r\n          transparent={true}\r\n          animationType=\"slide\"\r\n        >\r\n          <View style={styles.modalContainer}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>\r\n                Select {currentTimeSelection === 'start' ? 'Start' : 'End'} Time\r\n              </Text>\r\n              <TimePicker\r\n                time={currentTimeSelection === 'start' ? startTime : endTime}\r\n                onTimeChange={(newTime) => {\r\n                  if (currentTimeSelection === 'start') {\r\n                    setStartTime(newTime);\r\n                  } else {\r\n                    setEndTime(newTime);\r\n                  }\r\n                }}\r\n                onConfirm={() => setShowTimePicker(false)}\r\n              />\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  scrollView: {\r\n    padding: 15,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n    paddingTop: 40,\r\n    backgroundColor: 'transparent', // Make the header background transparent\r\n  },\r\n  backButton: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    borderRadius: 20,\r\n    padding: 10,\r\n  },\r\n  section: {\r\n    marginBottom: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#ffffff',\r\n  },\r\n  notificationFrequencyContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  frequencyButton: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff', // Change to white\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    alignItems: 'center',\r\n  },\r\n  frequencyButtonSelected: {\r\n    backgroundColor: '#000000', // Change to black\r\n  },\r\n  frequencyButtonText: {\r\n    fontSize: 16,\r\n    color: '#000000', // Change to black\r\n  },\r\n  frequencyButtonTextSelected: {\r\n    color: 'white', // Change to white\r\n  },\r\n  timeRangeContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  timeButton: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff', // Change to white\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    alignItems: 'center',\r\n  },\r\n  timeButtonText: {\r\n    fontSize: 16,\r\n    color: '#000000', // Change to black\r\n  },\r\n  categoriesContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  categoryButton: {\r\n    backgroundColor: '#ffffff', // Change to white\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 20,\r\n    margin: 4,\r\n  },\r\n  categoryButtonSelected: {\r\n    backgroundColor: '#000000', // Change to black\r\n  },\r\n  categoryButtonText: {\r\n    fontSize: 14,\r\n    color: '#000000', // Change to black\r\n  },\r\n  categoryButtonTextSelected: {\r\n    color: 'white', // Change to white\r\n  },\r\n  scheduleButton: {\r\n    backgroundColor: '#6a0dad', // Change to dark purple\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginTop: 20,\r\n    alignSelf: 'center',\r\n  },\r\n  scheduleButtonText: {\r\n    color: 'white', // Change to white\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    width: '80%',\r\n    maxHeight: '80%',\r\n  },\r\n  timePickerContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  timePickerColumns: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    height: 200,\r\n  },\r\n  timePickerColumn: {\r\n    flex: 1,\r\n    marginHorizontal: 10,\r\n  },\r\n  timePickerItem: {\r\n    paddingVertical: 10,\r\n    alignItems: 'center',\r\n  },\r\n  timePickerItemSelected: {\r\n    backgroundColor: '#4c669f',\r\n    borderRadius: 5,\r\n  },\r\n  timePickerText: {\r\n    fontSize: 18,\r\n    color: '#4c669f',\r\n  },\r\n  timePickerTextSelected: {\r\n    color: 'white',\r\n  },\r\n  confirmButton: {\r\n    backgroundColor: '#6a0dad', // Change to dark purple\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    marginTop: 20,\r\n  },\r\n  confirmButtonText: {\r\n    color: 'white', // Change to white\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default NotificationSettings;\r\n","// AccountScreen.js\r\nimport React from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet, FlatList } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport NotificationSettings from './NotificationSettings';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst AccountStack = createStackNavigator();\r\n\r\nconst AccountScreen = ({ navigation }) => {\r\n  const accountOptions = [\r\n    { id: '1', title: 'Notification Settings', onPress: () => navigation.navigate('NotificationSettings') },\r\n  ];\r\n\r\n  const renderAccountOption = ({ item }) => (\r\n    <TouchableOpacity style={styles.listItem} onPress={item.onPress}>\r\n      <Text style={styles.listItemText}>{item.title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#63b3ed', '#6a0dad', '#ed64a6']}\r\n      start={{ x: 0, y: 0 }}\r\n      end={{ x: 1, y: 1 }}\r\n      style={styles.container}\r\n    >\r\n      <FlatList\r\n        data={accountOptions}\r\n        renderItem={renderAccountOption}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst AccountStackScreen = () => {\r\n  return (\r\n    <AccountStack.Navigator screenOptions={{ headerShown: false }}>\r\n      <AccountStack.Screen name=\"Account Home\" component={AccountScreen} />\r\n      <AccountStack.Screen name=\"NotificationSettings\" component={NotificationSettings} />\r\n    </AccountStack.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 60,\r\n  },\r\n  listItem: {\r\n    padding: 20,\r\n    borderBottomColor: '#ccc',\r\n    borderBottomWidth: 1,\r\n  },\r\n  listItemText: {\r\n    fontSize: 18,\r\n    color: 'white', // Update text color to white for better contrast with gradient background\r\n  },\r\n});\r\n\r\nexport default AccountStackScreen;\r\n","import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Platform, StyleSheet } from 'react-native';\r\nimport { BlurView } from 'expo-blur';\r\n\r\n// Import screens\r\nimport HomeScreen from './screens/Home';\r\nimport MyOwn from './screens/MyQuotesAffirmation';\r\nimport Favorites from './screens/favorites';\r\nimport AccountStackScreen from './screens/AccountScreen';\r\n\r\n// Import react-icons for web\r\nimport { FaHome, FaPlusSquare, FaStar, FaUser } from 'react-icons/fa';\r\n\r\n// Import MaterialCommunityIcons for mobile\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst BottomTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          if (Platform.OS === 'web') {\r\n            // Use react-icons for web\r\n            switch (route.name) {\r\n              case 'Home':\r\n                return <FaHome color={color} size={size} />;\r\n              case 'My Quotes':\r\n                return <FaPlusSquare color={color} size={size} />;\r\n              case 'Favorites':\r\n                return <FaStar color={color} size={size} />;\r\n              case 'Account':\r\n                return <FaUser color={color} size={size} />;\r\n            }\r\n          } else {\r\n            // Use react-native-vector-icons for mobile\r\n            let iconName;\r\n            if (route.name === 'Home') {\r\n              iconName = focused ? 'home' : 'home-outline';\r\n            } else if (route.name === 'My Quotes') {\r\n              iconName = focused ? 'plus-box' : 'plus-box-outline';\r\n            } else if (route.name === 'Favorites') {\r\n              iconName = focused ? 'star' : 'star-outline';\r\n            } else if (route.name === 'Account') {\r\n              iconName = focused ? 'account' : 'account-outline';\r\n            }\r\n            return <MaterialCommunityIcons name={iconName} size={size} color={color} />;\r\n          }\r\n        },\r\n        headerShown: false,\r\n        tabBarShowLabel: false, // Remove tab names\r\n        tabBarStyle: styles.tabBarStyle,\r\n        tabBarActiveTintColor: 'white',\r\n        tabBarInactiveTintColor: 'white',\r\n        tabBarBackground: () => (\r\n          <BlurView\r\n            intensity={20} // Adjust intensity as needed\r\n            tint=\"light\"\r\n            style={styles.blurView}\r\n          />\r\n        ),\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"My Quotes\" component={MyOwn} />\r\n      <Tab.Screen name=\"Favorites\" component={Favorites} />\r\n      <Tab.Screen name=\"Account\" component={AccountStackScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  tabBarStyle: {\r\n    backgroundColor: 'transparent',\r\n    position: 'absolute',\r\n    borderTopWidth: 0,\r\n    elevation: 0,\r\n    bottom: Platform.OS === 'ios' ? 60 : 50, // Move higher to center with icons\r\n    left: 10,\r\n    right: 10,\r\n    height: 100, // Adjust height if needed\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  },\r\n  blurView: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 20, // Adjust the border radius for rounded corners\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nexport default BottomTabNavigator;\r\n","import 'react-native-url-polyfill/auto';\nimport React, { useRef, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport BottomTabNavigator from './navigation';\nimport * as Font from 'expo-font';\nimport { MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons'; // Correct import\n\nconst App = () => {\n  const navigationRef = useRef(null);\n\n  useEffect(() => {\n    async function loadFonts() {\n      try {\n        await Font.loadAsync({\n          'MaterialCommunityIcons': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf'),\n          'FontAwesome': require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome.ttf'),\n        });\n        console.log(\"Fonts loaded successfully\");\n      } catch (error) {\n        console.error(\"Error loading fonts: \", error);\n      }\n    }\n\n    loadFonts();\n  }, []);\n\n  return (\n    <SafeAreaProvider>\n      <GestureHandlerRootView style={{ flex: 1 }}>\n        <NavigationContainer ref={navigationRef}>\n          <BottomTabNavigator />\n        </NavigationContainer>\n      </GestureHandlerRootView>\n    </SafeAreaProvider>\n  );\n};\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [198], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Icon","name","size","color","_jsx","FaHeart","FaRegHeart","FaShareSquare","FaTh","FaStar","FaQuoteRight","FaBookOpen","FaSmile","HARDCODED_CATEGORIES","renderFiltersContent","handleFilterSelect","filters","onClose","onApplyFilters","authorsList","categoriesList","_jsxs","ScrollView","style","styles","bottomSheetContent","children","View","doneButtonContainer","TouchableOpacity","doneButton","onPress","Text","doneButtonText","sectionTitle","horizontal","showsHorizontalScrollIndicator","carousel","carouselRow","map","filterType","filterBox","includes","filterBoxActive","filterBoxText","filterBoxActiveText","filter","Object","entries","section","categories","StyleSheet","create","container","flex","appName","fontSize","fontWeight","textAlign","marginVertical","position","top","width","quoteContainer","alignItems","justifyContent","paddingHorizontal","marginTop","quoteText","actionButtonsContainer","flexDirection","bottom","left","right","actionButton","marginHorizontal","categoriesButton","borderRadius","overflow","blurViewButton","paddingVertical","buttonContent","buttonText","marginLeft","modal","margin","marginBottom","alignSelf","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingBottom","height","flexWrap","counterText","explanationContent","padding","maxHeight","explanationSection","explanationTitle","explanationText","lineHeight","closeButton","closeButtonText","HomeScreen","setFilters","useState","quote","setQuote","isDropdownVisible","setIsDropdownVisible","likedQuotes","setLikedQuotes","quoteCounter","setQuoteCounter","quoteDisplayTimeout","setQuoteDisplayTimeout","githubQuotes","setGithubQuotes","setAuthorsList","setCategoriesList","currentQuoteData","setCurrentQuoteData","isExplanationVisible","setIsExplanationVisible","notificationListener","useRef","responseListener","route","useRoute","useEffect","params","notificationQuote","undefined","current","Notifications","notification","response","request","content","data","async","responseQuotes","fetch","cache","responseCategories","ok","Error","fetchedQuotes","json","fetchedCategories","processedQuotes","flatMap","author","quotes","_objectSpread","type","allCategories","Set","category","structuredCategories","forEach","cat","has","categorizedItems","values","flat","uncategorizedItems","Array","from","length","push","keys","key","icon","randomQuote","Math","floor","random","text","AsyncStorage","setItem","JSON","stringify","error","console","cachedQuotes","getItem","cachedCategories","parse","cacheError","fetchGithubQuotes","getQuote","useCallback","getFavoriteQuotes","getMyQuotes","filteredQuotes","some","clearTimeout","timeout","setTimeout","prevCounter","newCounter","savedCounter","loadCounter","handleLikeQuote","savedQuotes","updatedLikedQuotes","translateY","Animated","Value","onGestureEvent","GestureState","UNDETERMINED","event","nativeEvent","translationY","useNativeDriver","quoteStyle","transform","handleCloseModal","LinearGradient","colors","start","x","y","end","Modal","isVisible","onBackdropPress","onBackButtonPress","animationIn","animationOut","animationInTiming","animationOutTiming","backdropOpacity","prevState","prevFilter","newFilters","PanGestureHandler","onHandlerStateChange","oldState","ACTIVE","timing","toValue","duration","setValue","minDist","minPointers","maxPointers","minDeltaY","maxDeltaY","handleQuoteClick","explanation","reference","handleShareQuote","Share","share","message","handleOpenFilters","BlurView","intensity","tint","safeArea","title","quoteInput","borderWidth","borderColor","authorInput","button","quotesContainer","quoteCard","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","quoteAuthor","deleteAction","deleteActionInner","deleteActionText","MyQuotesAffirmations","setText","setAuthor","setQuotes","swipeableRefs","Map","buttonScale","userQuotes","fetchQuotes","deleteQuote","updatedQuotes","q","quoteToDelete","renderQuoteItem","index","Swipeable","ref","set","delete","renderRightActions","progress","dragX","trans","interpolate","inputRange","outputRange","extrapolate","translateX","MaterialCommunityIcons","overshootRight","onSwipeableWillOpen","close","GestureHandlerRootView","TouchableWithoutFeedback","dismissKeyboard","Keyboard","dismiss","SafeAreaView","TextInput","onChangeText","value","placeholder","multiline","scale","trim","newQuote","sequence","scrollViewContent","sectionHeader","shareIcon","zIndex","Favorites","getLikedQuotes","useFocusEffect","groupedQuotes","reduce","grouped","parts","split","contentContainerStyle","showsVerticalScrollIndicator","scrollView","header","backButton","notificationFrequencyContainer","frequencyButton","frequencyButtonSelected","frequencyButtonText","frequencyButtonTextSelected","timeRangeContainer","timeButton","timeButtonText","categoriesContainer","categoryButton","categoryButtonSelected","categoryButtonText","categoryButtonTextSelected","scheduleButton","scheduleButtonText","modalContainer","modalContent","timePickerContainer","timePickerColumns","timePickerColumn","timePickerItem","timePickerItemSelected","timePickerText","timePickerTextSelected","confirmButton","confirmButtonText","NotificationSettings","notificationsEnabled","setNotificationsEnabled","notificationsPerDay","setNotificationsPerDay","startTime","setStartTime","hours","minutes","endTime","setEndTime","selectedCategories","setSelectedCategories","showTimePicker","setShowTimePicker","currentTimeSelection","setCurrentTimeSelection","navigation","useNavigation","loadSettings","requestNotificationPermissions","setupNotificationHandler","saveSettings","settings","parsedSettings","enabled","perDay","status","Alert","alert","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","calculateNotificationTimes","count","startMinutes","interval","_","i","totalMinutes","formatTime","time","toString","padStart","openTimePicker","goBack","Switch","onValueChange","trackColor","false","true","thumbColor","_Fragment","num","prevCategories","c","toggleCategory","notificationTimes","body","trigger","hour","minute","repeats","visible","transparent","animationType","modalTitle","TimePicker","onTimeChange","onConfirm","tempTime","setTempTime","newTime","AccountStack","createStackNavigator","AccountScreen","accountOptions","id","navigate","FlatList","renderItem","renderAccountOption","item","listItem","listItemText","keyExtractor","borderBottomColor","borderBottomWidth","AccountStackScreen","Navigator","screenOptions","headerShown","Screen","component","Tab","createBottomTabNavigator","tabBarStyle","borderTopWidth","blurView","BottomTabNavigator","tabBarIcon","focused","FaHome","FaPlusSquare","FaUser","tabBarShowLabel","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarBackground","MyOwn","App","navigationRef","Font","loadAsync","require","log","loadFonts","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}